version: '3.8'

services:
  mongodb:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  api-gateway:
    build:
      context: .
      args:
        SERVICE_NAME: api-gateway
    restart: always
    ports:
      - "3000:3000"
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - rabbitmq
    volumes:
      - ./logs:/app/logs

  booking-service:
    build:
      context: .
      args:
        SERVICE_NAME: booking-service
    restart: always
    environment:
      MONGODB_URI: mongodb://mongodb:27017
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - ./logs:/app/logs

  event-service:
    build:
      context: .
      args:
        SERVICE_NAME: event-service
    restart: always
    environment:
      MONGODB_URI: mongodb://mongodb:27017
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - ./logs:/app/logs

  notification-service:
    build:
      context: .
      args:
        SERVICE_NAME: notification-service
    restart: always
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - rabbitmq
      - redis
    volumes:
      - ./logs:/app/logs

  user-service:
    build:
      context: .
      args:
        SERVICE_NAME: user-service
    restart: always
    environment:
      MONGODB_URI: mongodb://mongodb:27017
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - ./logs:/app/logs

  payment-service:
    build:
      context: .
      args:
        SERVICE_NAME: payment-service
    restart: always
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      STRIPE_SECRET_KEY: your_stripe_secret_key
      STRIPE_WEBHOOK_SECRET: your_stripe_webhook_secret
    depends_on:
      - rabbitmq
    volumes:
      - ./logs:/app/logs

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  loki:
    image: grafana/loki:2.4.1
    restart: always
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.4.1
    restart: always
    volumes:
      - ./logs:/var/log
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml

  prometheus:
    image: prom/prometheus:v2.37.0
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:8.5.2
    restart: always
    ports:
      - "4000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

volumes:
  mongodb_data:
  redis_data:
  loki_data:
  prometheus_data:
  grafana_data:
