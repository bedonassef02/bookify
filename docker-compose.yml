version: '3.8'

services:
  mongodb:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  api-gateway:
    build:
      context: .
      target: development
      args:
        SERVICE_NAME: api-gateway
    restart: always
    ports:
      - "3000:3000"
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - rabbitmq
    volumes:
      - ./apps/api-gateway:/app/apps/api-gateway
      - ./libs/shared:/app/libs/shared
      - ./libs/file-storage:/app/libs/file-storage
      - /app/node_modules
      - ./logs:/app/logs
    command: npm run start:dev api-gateway

  booking-service:
    build:
      context: .
      target: development
      args:
        SERVICE_NAME: booking-service
    restart: always
    environment:
      MONGODB_URI: mongodb://mongodb:27017
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - ./apps/booking-service:/app/apps/booking-service
      - ./libs/shared:/app/libs/shared
      - ./libs/file-storage:/app/libs/file-storage
      - /app/node_modules
      - ./logs:/app/logs
    command: npm run start:dev booking-service

  event-service:
    build:
      context: .
      target: development
      args:
        SERVICE_NAME: event-service
    restart: always
    environment:
      MONGODB_URI: mongodb://mongodb:27017
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - ./apps/event-service:/app/apps/event-service
      - ./libs/shared:/app/libs/shared
      - ./libs/file-storage:/app/libs/file-storage
      - /app/node_modules
      - ./logs:/app/logs
    command: npm run start:dev event-service

  notification-service:
    build:
      context: .
      target: development
      args:
        SERVICE_NAME: notification-service
    restart: always
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - rabbitmq
      - redis
    volumes:
      - ./apps/notification-service:/app/apps/notification-service
      - ./libs/shared:/app/libs/shared
      - ./libs/file-storage:/app/libs/file-storage
      - /app/node_modules
      - ./logs:/app/logs
    command: npm run start:dev notification-service

  user-service:
    build:
      context: .
      target: development
      args:
        SERVICE_NAME: user-service
    restart: always
    environment:
      MONGODB_URI: mongodb://mongodb:27017
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - ./apps/user-service:/app/apps/user-service
      - ./libs/shared:/app/libs/shared
      - ./libs/file-storage:/app/libs/file-storage
      - /app/node_modules
      - ./logs:/app/logs
    command: npm run start:dev user-service

  payment-service:
    build:
      context: .
      target: development
      args:
        SERVICE_NAME: payment-service
    restart: always
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      STRIPE_SECRET_KEY: your_stripe_secret_key
      STRIPE_WEBHOOK_SECRET: your_stripe_webhook_secret
    depends_on:
      - rabbitmq
    volumes:
      - ./apps/payment-service:/app/apps/payment-service
      - ./libs/shared:/app/libs/shared
      - ./libs/file-storage:/app/libs/file-storage
      - /app/node_modules
      - ./logs:/app/logs
    command: npm run start:dev payment-service

  review-service:
    build:
      context: .
      target: development
      args:
        SERVICE_NAME: review-service
    restart: always
    environment:
      MONGODB_URI: mongodb://mongodb:27017
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - ./apps/review-service:/app/apps/review-service
      - ./libs/shared:/app/libs/shared
      - ./libs/file-storage:/app/libs/file-storage
      - /app/node_modules
      - ./logs:/app/logs
    command: npm run start:dev review-service

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  mongodb_data:
  redis_data: